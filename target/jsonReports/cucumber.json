[
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 205765824,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.625Z",
        "line": 14,
        "name": "Obtain quotes of the Market",
        "description": "",
        "id": "market-data;obtain-quotes-of-the-market;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8275207,
              "status": "passed"
            },
            "line": 8,
            "name": "In the market exist DIS,VXX",
            "match": {
              "arguments": [
                {
                  "val": "DIS,VXX",
                  "offset": 20
                }
              ],
              "location": "QuotesSteps.inTheMarketExistSymbols(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17220264412,
              "status": "passed"
            },
            "line": 9,
            "name": "I call the quotes with DIS,VXX",
            "match": {
              "arguments": [
                {
                  "val": "DIS,VXX",
                  "offset": 23
                }
              ],
              "location": "QuotesSteps.iCallTheQuotesWithSymbols(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46410,
              "status": "passed"
            },
            "line": 10,
            "name": "I receive a list with only the called symbols",
            "match": {
              "location": "AssertQuotesSteps.iReceiveAListWithOnlyTheCalledSymbols()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 43656977,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.788Z",
        "line": 16,
        "name": "Post quotes to the market",
        "description": "",
        "id": "market-data;post-quotes-to-the-market",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16264595561,
              "status": "passed"
            },
            "line": 17,
            "name": "I post quotes with symbols: AAPL,VXX",
            "match": {
              "arguments": [
                {
                  "val": "AAPL,VXX",
                  "offset": 28
                }
              ],
              "location": "QuotesSteps.iPostQuotesWithSymbols(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2512509,
              "status": "passed"
            },
            "line": 18,
            "name": "I receive a list with only the called symbols",
            "match": {
              "location": "AssertQuotesSteps.iReceiveAListWithOnlyTheCalledSymbols()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 113625194,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.719Z",
        "line": 27,
        "name": "Obtain quotes with an option chain",
        "description": "",
        "id": "market-data;obtain-quotes-with-an-option-chain;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14447292,
              "status": "passed"
            },
            "line": 21,
            "name": "I have an option chain of VXX with expiration date: 2019-09-20",
            "match": {
              "arguments": [
                {
                  "val": "VXX",
                  "offset": 26
                },
                {
                  "val": "2019-09-20",
                  "offset": 52
                }
              ],
              "location": "OptionsSteps.iHaveAnOptionChainOfSymbolWithExpirationDateDate(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16349314447,
              "status": "passed"
            },
            "line": 22,
            "name": "I call quotes with symbol: VXX expiration date: 2019-09-20",
            "match": {
              "arguments": [
                {
                  "val": "VXX",
                  "offset": 27
                },
                {
                  "val": "2019-09-20",
                  "offset": 48
                }
              ],
              "location": "OptionsSteps.ICallQuotesWithSymbolAndExpirationDate(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 116270,
              "status": "passed"
            },
            "line": 23,
            "name": "I receive quotes related to the symbol with the expiration date only",
            "match": {
              "location": "AssertOptionsSteps.iReceiveQuotesRelatedToTheSymbolWithTheExpirationDateOnly()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 191748438,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.637Z",
        "line": 36,
        "name": "Obtain quotes of options strikes prices",
        "description": "",
        "id": "market-data;obtain-quotes-of-options-strikes-prices;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12957765,
              "status": "passed"
            },
            "line": 30,
            "name": "I have an option strikes of DIS with expiration date: 2019-09-20",
            "match": {
              "arguments": [
                {
                  "val": "DIS",
                  "offset": 28
                },
                {
                  "val": "2019-09-20",
                  "offset": 54
                }
              ],
              "location": "OptionsSteps.iHaveAnOptionStrikesOfSymbolWithExpirationDateDate(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16307348758,
              "status": "passed"
            },
            "line": 31,
            "name": "I call the options strikes with the symbol: DIS expiration date: 2019-09-20",
            "match": {
              "arguments": [
                {
                  "val": "DIS",
                  "offset": 44
                },
                {
                  "val": "2019-09-20",
                  "offset": 65
                }
              ],
              "location": "OptionsSteps.ICallTheOptionsStrikesWithTheSymbolAndExpirationDate(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137765,
              "status": "passed"
            },
            "line": 32,
            "name": "I receive the strikes related to the symbol with the expiration date only",
            "match": {
              "location": "AssertOptionsSteps.iReceiveTheStrikesRelatedToTheSymbolWithTheExpirationDateOnly()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 48836371,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.780Z",
        "line": 45,
        "name": "Obtain the expiration dates of an option",
        "description": "",
        "id": "market-data;obtain-the-expiration-dates-of-an-option;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11090604,
              "status": "passed"
            },
            "line": 39,
            "name": "The VXX exist in the market with 2019-09-06",
            "match": {
              "arguments": [
                {
                  "val": "VXX",
                  "offset": 4
                },
                {
                  "val": "2019-09-06",
                  "offset": 33
                }
              ],
              "location": "OptionsSteps.theSymbolExistInTheMarketWith(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16342392467,
              "status": "passed"
            },
            "line": 40,
            "name": "I call the options expiration with VXX",
            "match": {
              "arguments": [
                {
                  "val": "VXX",
                  "offset": 35
                }
              ],
              "location": "OptionsSteps.ICallTheOptionsExpirationWithSymbol(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 74746,
              "status": "passed"
            },
            "line": 41,
            "name": "I receive expiration dates with 2019-09-06",
            "match": {
              "arguments": [
                {
                  "val": "2019-09-06",
                  "offset": 32
                }
              ],
              "location": "AssertOptionsSteps.iReceiveExpirationDates(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 105238114,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.727Z",
        "line": 54,
        "name": "Obtain historical pricing information",
        "description": "",
        "id": "market-data;obtain-historical-pricing-information;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13109209,
              "status": "passed"
            },
            "line": 48,
            "name": "In the market there is a AC with a transaction on the date 2019-01-02",
            "match": {
              "arguments": [
                {
                  "val": "AC",
                  "offset": 25
                },
                {
                  "val": "2019-01-02",
                  "offset": 59
                }
              ],
              "location": "HistorySteps.inTheMarketThereIsASymbolWithATransactionOnTheDateHistoricalDate(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16278968596,
              "status": "passed"
            },
            "line": 49,
            "name": "I call the historical with AC",
            "match": {
              "arguments": [
                {
                  "val": "AC",
                  "offset": 27
                }
              ],
              "location": "HistorySteps.ICallTheHistoricalWithSymbol(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 212999,
              "status": "passed"
            },
            "line": 50,
            "name": "I receive the historical pricing related to the AC",
            "match": {
              "arguments": [
                {
                  "val": "AC",
                  "offset": 48
                }
              ],
              "location": "AssertHistorySteps.iReceiveTheHistoricalPricingRelatedToTheSymbol(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 69670213,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.760Z",
        "line": 56,
        "name": "Obtain time sales information of a specific symbol",
        "description": "",
        "id": "market-data;obtain-time-sales-information-of-a-specific-symbol",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16368859546,
              "status": "passed"
            },
            "line": 57,
            "name": "I call the time sales with symbol: AC",
            "match": {
              "arguments": [
                {
                  "val": "AC",
                  "offset": 35
                }
              ],
              "location": "TimeSalesSteps.ICallTheTimeSalesWithSymbol(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: is \u003ctrue\u003e\n     but: was \u003cfalse\u003e\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat steps.marketdata.timesales.AssertTimeSalesSteps.iReceiveTimeSalesInformationOfTheCurrentDatRelatedToTheSymbol(AssertTimeSalesSteps.java:21)\r\n\tat ✽.I receive time sales information of the current day related to the symbol(file:src/test/resources/features/marketdata.feature:58)\r\n",
              "duration": 111187430,
              "status": "failed"
            },
            "line": 58,
            "name": "I receive time sales information of the current day related to the symbol",
            "match": {
              "location": "AssertTimeSalesSteps.iReceiveTimeSalesInformationOfTheCurrentDatRelatedToTheSymbol()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 120706922,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.709Z",
        "line": 60,
        "name": "Obtain intraday status",
        "description": "",
        "id": "market-data;obtain-intraday-status",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16347688619,
              "status": "passed"
            },
            "line": 61,
            "name": "I call the clock",
            "match": {
              "location": "ClockSteps.ICallTheClock()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124231664,
              "status": "passed"
            },
            "line": 62,
            "name": "I receive information about the current day status",
            "match": {
              "location": "AssertClockSteps.iReceiveInformationAboutTheCurrentDayStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 134141003,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.696Z",
        "line": 71,
        "name": "Obtain information of a company",
        "description": "",
        "id": "market-data;obtain-information-of-a-company;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9039756,
              "status": "passed"
            },
            "line": 65,
            "name": "There exist content related to alphabet",
            "match": {
              "arguments": [
                {
                  "val": "alphabet",
                  "offset": 31
                }
              ],
              "location": "SearchSteps.thereExistContentRelatedToKeyword(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16360184235,
              "status": "passed"
            },
            "line": 66,
            "name": "I call a query for q: alphabet",
            "match": {
              "arguments": [
                {
                  "val": "alphabet",
                  "offset": 22
                }
              ],
              "location": "SearchSteps.ICallAQueryForQ(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84516,
              "status": "passed"
            },
            "line": 67,
            "name": "I receive information of the searched company",
            "match": {
              "location": "AssertSearchSteps.iReceiveInformationOfTheSearchedCompany()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 103239539,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:04.729Z",
        "line": 80,
        "name": "Search for symbols",
        "description": "",
        "id": "market-data;search-for-symbols;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8293282,
              "status": "passed"
            },
            "line": 74,
            "name": "There are symbols related with goog",
            "match": {
              "arguments": [
                {
                  "val": "goog",
                  "offset": 31
                }
              ],
              "location": "SearchSteps.thereAreSymbolsRelatedWithKeyword(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16324397472,
              "status": "passed"
            },
            "line": 75,
            "name": "I call the symbol for q: goog",
            "match": {
              "arguments": [
                {
                  "val": "goog",
                  "offset": 25
                }
              ],
              "location": "SearchSteps.ICallTheSymbolForQ(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11362227,
              "status": "passed"
            },
            "line": 76,
            "name": "I receive information about the searched symbol",
            "match": {
              "location": "AssertSearchSteps.iReceiveInformationAboutTheSearchedSymbol()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1284833,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an authorization token",
            "match": {
              "location": "GeneralMarketDataSteps.IHaveAnAuthorizationToken()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.104Z",
        "line": 89,
        "name": "Obtain market information of a month",
        "description": "",
        "id": "market-data;obtain-market-information-of-a-month;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 33008494,
              "status": "passed"
            },
            "line": 83,
            "name": "I want the calendar of 3 of 2019",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 23
                },
                {
                  "val": "2019",
                  "offset": 28
                }
              ],
              "location": "CalendarSteps.iWantTheCalendarOfMonthOfYear(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 583730101,
              "status": "passed"
            },
            "line": 84,
            "name": "I call the calendar with the 3 of the 2019",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 29
                },
                {
                  "val": "2019",
                  "offset": 38
                }
              ],
              "location": "CalendarSteps.iCallTheCalendarWithTheMonthOfTheYear(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 133857,
              "status": "passed"
            },
            "line": 85,
            "name": "I receive information about the month status",
            "match": {
              "location": "AssertCalendarSteps.iReceiveInformationAboutTheMonthStatus()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Market data",
    "description": "  The API shows different information about Market Data",
    "id": "market-data",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/marketdata.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-09-05T09:54:21.126Z",
        "line": 4,
        "name": "Obtain all watchlist of a user",
        "description": "",
        "id": "watchlist;obtain-all-watchlist-of-a-user",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3084577,
              "status": "passed"
            },
            "line": 5,
            "name": "I have a watchlist with name: default",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 30
                }
              ],
              "location": "WatchlistSteps.iHaveAWatchlistWithName(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createGetResponse(ResponseCreator.java:22)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:12)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIWithWatchlist(WatchlistSteps.java:35)\r\n\tat ✽.I call the API with watchlist(file:src/test/resources/features/watchlist.feature:6)\r\n",
              "duration": 580307461,
              "status": "failed"
            },
            "line": 6,
            "name": "I call the API with watchlist",
            "match": {
              "location": "WatchlistSteps.iCallTheAPIWithWatchlist()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17587,
              "status": "skipped"
            },
            "line": 7,
            "name": "I receive a list of watchlist that has the user watchlist names",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveAListOfWatchlistThatHasTheUserWatchlistNames()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.142Z",
        "line": 9,
        "name": "Obtain a specific watchlist of a user",
        "description": "",
        "id": "watchlist;obtain-a-specific-watchlist-of-a-user",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1821727,
              "status": "passed"
            },
            "line": 10,
            "name": "I have a watchlist with id: default",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 28
                }
              ],
              "location": "WatchlistSteps.iHaveAWatchlistWithId(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createGetResponse(ResponseCreator.java:22)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:12)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheWatchlistId(WatchlistSteps.java:53)\r\n\tat ✽.I call the watchlist id: default(file:src/test/resources/features/watchlist.feature:11)\r\n",
              "duration": 567110806,
              "status": "failed"
            },
            "line": 11,
            "name": "I call the watchlist id: default",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 25
                }
              ],
              "location": "WatchlistSteps.iCallTheWatchlistId(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4396,
              "status": "skipped"
            },
            "line": 12,
            "name": "I receive the watchlist by id with the correct name",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheWatchlistByIdWithTheCorrectName()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.173Z",
        "line": 14,
        "name": "Create a new watchlist",
        "description": "",
        "id": "watchlist;create-a-new-watchlist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 48698605,
              "status": "passed"
            },
            "line": 15,
            "name": "I want to create a new watchlist with name: MyWatchlist that has symbol: AAPL",
            "match": {
              "arguments": [
                {
                  "val": "MyWatchlist",
                  "offset": 44
                },
                {
                  "val": "AAPL",
                  "offset": 73
                }
              ],
              "location": "WatchlistSteps.iWantToCreateANewWatchlistWithNameThatHasSymbols(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createPostResponse(ResponseCreator.java:29)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:15)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIWithWatchlistNameSymbols(WatchlistSteps.java:73)\r\n\tat ✽.I call the API with watchlist name: MyWatchlist symbol: AAPL(file:src/test/resources/features/watchlist.feature:16)\r\n",
              "duration": 666792382,
              "status": "failed"
            },
            "line": 16,
            "name": "I call the API with watchlist name: MyWatchlist symbol: AAPL",
            "match": {
              "arguments": [
                {
                  "val": "MyWatchlist",
                  "offset": 36
                },
                {
                  "val": "AAPL",
                  "offset": 56
                }
              ],
              "location": "WatchlistSteps.iCallTheAPIWithWatchlistNameSymbols(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3908,
              "status": "skipped"
            },
            "line": 17,
            "name": "I receive the new watchlist with symbols added",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheNewWatchlistWithSymbolsAdded()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.189Z",
        "line": 19,
        "name": "Update a watchlist",
        "description": "",
        "id": "watchlist;update-a-watchlist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 106491682,
              "status": "passed"
            },
            "line": 20,
            "name": "I want to change name of a watchlist to UpdatedWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "UpdatedWatchlist",
                  "offset": 40
                }
              ],
              "location": "WatchlistSteps.iWantToChangeNameOfAWatchlistToUpdatedWatchlist(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.GeneratedMethodAccessor175.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createPutResponse(ResponseCreator.java:35)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:18)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIWithTheWatchlistIdAndTheUpdatedName(WatchlistSteps.java:92)\r\n\tat ✽.I call the API with the watchlist id: default and the updated name UpdatedWatchlist(file:src/test/resources/features/watchlist.feature:21)\r\n",
              "duration": 673769565,
              "status": "failed"
            },
            "line": 21,
            "name": "I call the API with the watchlist id: default and the updated name UpdatedWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 38
                },
                {
                  "val": "UpdatedWatchlist",
                  "offset": 67
                }
              ],
              "location": "WatchlistSteps.iCallTheAPIWithTheWatchlistIdAndTheUpdatedName(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3908,
              "status": "skipped"
            },
            "line": 22,
            "name": "I receive the watchlist with the updated information",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheWatchlistWithTheUpdatedInformation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.189Z",
        "line": 24,
        "name": "Delete a specific watchlist",
        "description": "",
        "id": "watchlist;delete-a-specific-watchlist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1948257,
              "status": "passed"
            },
            "line": 25,
            "name": "I want to delete the watchlist with the id: MyWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "MyWatchlist",
                  "offset": 44
                }
              ],
              "location": "WatchlistSteps.iWantToDeleteTheWatchlistWithTheId(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createDeleteResponse(ResponseCreator.java:41)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:21)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIWithWatchlistId(WatchlistSteps.java:109)\r\n\tat ✽.I call the API with watchlist id: MyWatchlist(file:src/test/resources/features/watchlist.feature:26)\r\n",
              "duration": 639228064,
              "status": "failed"
            },
            "line": 26,
            "name": "I call the API with watchlist id: MyWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "MyWatchlist",
                  "offset": 34
                }
              ],
              "location": "WatchlistSteps.iCallTheAPIWithWatchlistId(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3909,
              "status": "skipped"
            },
            "line": 27,
            "name": "I receive the deleted watchlist",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheDeletedWatchlist()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.205Z",
        "line": 29,
        "name": "Add symbol to specific watchlist",
        "description": "",
        "id": "watchlist;add-symbol-to-specific-watchlist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26804654,
              "status": "passed"
            },
            "line": 30,
            "name": "I want to add the symbol NFLX to a watchlist with name: MyWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "NFLX",
                  "offset": 25
                },
                {
                  "val": "MyWatchlist",
                  "offset": 56
                }
              ],
              "location": "WatchlistSteps.iWantToAddTheSymbolToAWatchlistWithName(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c401\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createPostResponse(ResponseCreator.java:29)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:15)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIByWatchlistIdAndSymbol(WatchlistSteps.java:128)\r\n\tat ✽.I call the API by watchlist id: default and symbol: NFLX(file:src/test/resources/features/watchlist.feature:31)\r\n",
              "duration": 675910791,
              "status": "failed"
            },
            "line": 31,
            "name": "I call the API by watchlist id: default and symbol: NFLX",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 32
                },
                {
                  "val": "NFLX",
                  "offset": 52
                }
              ],
              "location": "WatchlistSteps.iCallTheAPIByWatchlistIdAndSymbol(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4397,
              "status": "skipped"
            },
            "line": 32,
            "name": "I receive the watchlist with the added symbol",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheWatchlistWithTheAddedSymbol()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-09-05T09:54:21.305Z",
        "line": 34,
        "name": "Remove a symbol of a specific watchlist",
        "description": "",
        "id": "watchlist;remove-a-symbol-of-a-specific-watchlist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1419179,
              "status": "passed"
            },
            "line": 35,
            "name": "I want to remove the NFLX symbol from the watchlist with name: MyWatchlist",
            "match": {
              "arguments": [
                {
                  "val": "NFLX",
                  "offset": 21
                },
                {
                  "val": "MyWatchlist",
                  "offset": 63
                }
              ],
              "location": "WatchlistSteps.iWantToRemoveTheSymbolFromTheWatchlistWithName(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c404\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$9.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat utils.ResponseCreator.getBaseResponse(ResponseCreator.java:15)\r\n\tat utils.ResponseCreator.createPostResponse(ResponseCreator.java:29)\r\n\tat utils.ResponseFactory.createResponse(ResponseFactory.java:15)\r\n\tat steps.watchlist.WatchlistSteps.iCallTheAPIToDeleteTheWatchlistByWatchlistIdAndSymbol(WatchlistSteps.java:147)\r\n\tat ✽.I call the API to delete the watchlist by watchlist id: default and symbol: NFLX(file:src/test/resources/features/watchlist.feature:36)\r\n",
              "duration": 647528186,
              "status": "failed"
            },
            "line": 36,
            "name": "I call the API to delete the watchlist by watchlist id: default and symbol: NFLX",
            "match": {
              "arguments": [
                {
                  "val": "default",
                  "offset": 56
                },
                {
                  "val": "NFLX",
                  "offset": 76
                }
              ],
              "location": "WatchlistSteps.iCallTheAPIToDeleteTheWatchlistByWatchlistIdAndSymbol(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3908,
              "status": "skipped"
            },
            "line": 37,
            "name": "I receive the watchlist without the deleted symbol",
            "match": {
              "location": "AssertWatchlistSteps.iReceiveTheWatchlistWithoutTheDeletedSymbol()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Watchlist",
    "description": "  The API shows different information about Watchlist",
    "id": "watchlist",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/watchlist.feature",
    "tags": []
  }
]
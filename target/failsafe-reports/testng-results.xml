<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="5" failed="1" ignored="0" total="16" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="5914" started-at="2019-09-03T17:08:27Z" finished-at="2019-09-03T17:08:33Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Surefire test" duration-ms="5914" started-at="2019-09-03T17:08:27Z" finished-at="2019-09-03T17:08:33Z">
      <class name="runner.Runner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.Runner@6b2fad11]" name="setUpClass" is-config="true" duration-ms="371" started-at="2019-09-03T17:08:27Z" finished-at="2019-09-03T17:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4622" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain quotes of the Market"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4643" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Post quotes to the market"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4690" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain quotes with an option chain"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4652" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain quotes of the Market"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4648" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain quotes of options strikes prices"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4607" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain the expiration dates of an option"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4675" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain historical pricing information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4663" started-at="2019-09-03T17:08:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain time sales information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: "2019-09-03T09:30:00"
     but: was "2019-08-30T16:02:00"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: "2019-09-03T09:30:00"
     but: was "2019-08-30T16:02:00"
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at steps.marketdata.timesales.AssertTimeSalesSteps.iReceiveTimeSalesInformationRelatedToTheSymbol(AssertTimeSalesSteps.java:18)
at âœ½.I receive time sales information related to the symbol(file:src/test/resources/features/marketdata.feature:53)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4543" started-at="2019-09-03T17:08:28Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain intraday status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="558" started-at="2019-09-03T17:08:28Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain market information of a month"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="4038" started-at="2019-09-03T17:08:28Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain information of a company"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="530" started-at="2019-09-03T17:08:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search for symbols"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Market data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="2" started-at="2019-09-03T17:08:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain watchlist of a user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Watchlist"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="0" started-at="2019-09-03T17:08:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Obtain a specific watchlist of a user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Watchlist"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="0" started-at="2019-09-03T17:08:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create a new watchlist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Watchlist"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@6b2fad11]" name="runScenario" duration-ms="0" started-at="2019-09-03T17:08:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-09-03T17:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update an existing watchlist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Watchlist"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner@6b2fad11]" name="tearDownClass" is-config="true" duration-ms="191" started-at="2019-09-03T17:08:33Z" finished-at="2019-09-03T17:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
